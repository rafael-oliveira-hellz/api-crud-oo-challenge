{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "ADOPT A PET API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "User",
      "description": "Endpoints"
    },
    {
      "name": "Pet",
      "description": "Endpoints"
    },
    {
      "name": "PrivateKey",
      "description": "Endpoints"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    },
    "petadoption_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://petstore.swagger.io/oauth/authorize",
      "flow": "implicit",
      "scopes": {
        "read_pets": "read your pets",
        "write_pets": "modify pets in your account"
      }
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para listar todos os usuários, de forma paginada.",
        "parameters": [
          {
            "name": "page",
            "description": "Número da página que mostra a lista paginada dos resultados de busca de usuários.",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limite de usuários a serem mostrados na lista.",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Usuários encontrados.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "Nenhum usuário encontrado."
          },
          "500": {
            "description": "Erro interno do sistema."
          }
        }
      }
    },
    "/pets": {
      "get": {
        "tags": [
          "Pet"
        ],
        "description": "Endpoint para listar todos os pets, de forma paginada.",
        "parameters": [
          {
            "name": "page",
            "description": "Número da página que mostra os resultados de busca de pets.",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limite de pets a serem mostrados na lista.",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Pets listados com sucesso.",
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          },
          "404": {
            "description": "Nenhum pet encontrado."
          },
          "500": {
            "description": "Erro interno do sistema."
          }
        }
      }
    },
    "/login_attemps": {
      "get": {
        "tags": [
          "Pet"
        ],
        "description": "Endpoint para listar todas as tentativas de login dos usuários, de forma paginada.",
        "parameters": [
          {
            "name": "page",
            "description": "Número da página que mostra o resultado das tentativas de login dos usuários.",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limite de pets a serem mostrados na lista.",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Pets listados com sucesso.",
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          },
          "404": {
            "description": "Nenhum pet encontrado."
          },
          "500": {
            "description": "Erro interno do sistema."
          }
        }
      }
    },
    "/createJwtPrivateKey": {
      "post": {
        "tags": [
          "PrivateKey"
        ],
        "description": "Endpoint administrativo para criar uma chave privada JWT.",
        "parameters": [],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/JwtPrivateKey"
            },
            "description": "Chave privada criada com sucesso."
          },
          "400": {
            "description": "Erro ao criar a chave privada."
          },
          "500": {
            "description": "Erro interno do sistema."
          }
        }
      }
    },
    "/createIpGeolocationApiKey": {
      "post": {
        "tags": [
          "PrivateKey"
        ],
        "description": "Endpoint administrativo para criar uma chave da API de geolocalização.",
        "parameters": [],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/IpGeoLocationKey"
            },
            "description": "Chave privada criada com sucesso."
          },
          "400": {
            "description": "Erro ao criar a chave privada."
          },
          "500": {
            "description": "Erro interno do sistema."
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para cadastro de usuários",
        "parameters": [],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/User"
            },
            "description": "Usuário criado com sucesso."
          },
          "400": {
            "description": "Erro ao criar usuário."
          }
        }
      }
    },
    "/user/verifyUser": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para verificar se o usuário está logado através do token",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User"
            },
            "description": "Usuário autenticado com sucesso."
          },
          "400": {
            "description": "Falha ao autenticar o usuário."
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para buscar um usuário pelo ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do usuário."
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User"
            },
            "description": "Usuário encontrado."
          },
          "404": {
            "description": "Usuário não encontrado."
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para deletar um usuário",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do usuário."
          }
        ],
        "responses": {
          "204": {
            "schema": {
              "$ref": "#/definitions/User"
            },
            "description": "Usuário deletado com sucesso."
          },
          "400": {
            "description": "Erro ao deletar usuário."
          },
          "401": {
            "description": "Usuário não autorizado."
          },
          "404": {
            "description": "Usuário não encontrado."
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para atualizar os realizar o login do usuário",
        "parameters": [
          {
            "name": "email",
            "description": "E-mail do usuário.",
            "in": "query",
            "type": "string"
          },
          {
            "name": "password",
            "description": "Senha do usuário.",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User"
            },
            "description": "Usuário logado com sucesso."
          },
          "400": {
            "description": "Erro ao logar usuário."
          }
        }
      }
    },
    "/user/edit/{id}": {
      "patch": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para atualizar os dados do usuário",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do usuário."
          }
        ],
        "responses": {
          "204": {
            "schema": {
              "$ref": "#/definitions/User"
            },
            "description": "Usuário atualizado com sucesso."
          },
          "400": {
            "description": "Erro ao atualizar os dados do usuário."
          },
          "401": {
            "description": "Usuário não autorizado."
          },
          "404": {
            "description": "Usuário não encontrado."
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para realizar o logout do usuário",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User"
            },
            "description": "Usuário deslogado com sucesso."
          },
          "400": {
            "description": "Erro ao deslogar usuário."
          },
          "401": {
            "description": "Usuário não autorizado."
          },
          "404": {
            "description": "Usuário não encontrado."
          }
        }
      }
    },
    "/pet/create": {
      "post": {
        "tags": [
          "Pet"
        ],
        "description": "Endpoint para adicionar um pet",
        "parameters": [],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Pet"
            },
            "description": "Pet adicionado com sucesso."
          },
          "400": {
            "description": "Erro ao adicionar pet."
          },
          "401": {
            "description": "Ação não autorizada"
          },
          "404": {
            "description": "Usuário não encontrado."
          }
        }
      }
    },
    "/pets/my-pets": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/pet/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      },
      "patch": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/pet/schedule/{id}": {
      "patch": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/pet/conclude/{id}": {
      "patch": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/pet/cancel/{id}": {
      "patch": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/pets/my-adoptions": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/pets/all-adoptions": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Jhon Doe"
        },
        "email": {
          "type": "string",
          "example": "john@doe.com"
        },
        "password": {
          "type": "string",
          "example": "P@ss123456"
        },
        "avatar": {
          "type": "string",
          "example": "https://randomuser.me/api/portraits/"
        },
        "phone": {
          "type": "string",
          "example": "+5511912345678"
        },
        "role": {
          "type": "string",
          "example": "user"
        },
        "isLockedOut": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "Pet": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Jhon Doe Jr"
        },
        "age": {
          "type": "number",
          "example": 2
        },
        "weight": {
          "type": "number",
          "example": 8
        },
        "color": {
          "type": "string",
          "example": "white"
        },
        "type": {
          "type": "string",
          "example": "dog"
        },
        "breed": {
          "type": "string",
          "example": "labrador"
        },
        "description": {
          "type": "string",
          "example": "A very cute dog"
        },
        "images": {
          "type": "array",
          "example": [
            "https://images.unsplash.com/photo-1518791841217-8f162f1e1131?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60",
            "https://images.unsplash.com/photo-1518791841217-8f162f1e1131?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60",
            "https://images.unsplash.com/photo-1518791841217-8f162f1e1131?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60"
          ],
          "items": {
            "type": "string"
          }
        },
        "available": {
          "type": "boolean",
          "example": true
        },
        "user": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Jhon Doe"
            },
            "email": {
              "type": "string",
              "example": "jhon@doe.com"
            },
            "avatar": {
              "type": "string",
              "example": "https://randomuser.me/api/portraits/"
            },
            "phone": {
              "type": "string",
              "example": "+5511999999999"
            }
          }
        },
        "adopter": {
          "type": "object",
          "properties": {}
        }
      }
    },
    "MyPets": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Jhon Doe Jr"
        },
        "age": {
          "type": "number",
          "example": 2
        },
        "weight": {
          "type": "number",
          "example": 8
        },
        "color": {
          "type": "string",
          "example": "white"
        },
        "type": {
          "type": "string",
          "example": "dog"
        },
        "breed": {
          "type": "string",
          "example": "labrador"
        },
        "description": {
          "type": "string",
          "example": "A very cute dog"
        },
        "images": {
          "type": "array",
          "example": [
            "https://images.unsplash.com/photo-1518791841217-8f162f1e1131?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60",
            "https://images.unsplash.com/photo-1518791841217-8f162f1e1131?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60",
            "https://images.unsplash.com/photo-1518791841217-8f162f1e1131?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60"
          ],
          "items": {
            "type": "string"
          }
        },
        "available": {
          "type": "boolean",
          "example": true
        },
        "user": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Jhon Doe"
            },
            "email": {
              "type": "string",
              "example": "jhon@doe.com"
            },
            "avatar": {
              "type": "string",
              "example": "https://randomuser.me/api/portraits/"
            },
            "phone": {
              "type": "string",
              "example": "+5511999999999"
            }
          }
        },
        "adopter": {
          "type": "object",
          "properties": {}
        }
      }
    },
    "ScheduleAdoption": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Jhon Doe Jr"
        },
        "age": {
          "type": "number",
          "example": 2
        },
        "weight": {
          "type": "number",
          "example": 8
        },
        "color": {
          "type": "string",
          "example": "white"
        },
        "type": {
          "type": "string",
          "example": "dog"
        },
        "breed": {
          "type": "string",
          "example": "labrador"
        },
        "description": {
          "type": "string",
          "example": "A very cute dog"
        },
        "images": {
          "type": "array",
          "example": [
            "https://images.unsplash.com/photo-1518791841217-8f162f1e1131?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60",
            "https://images.unsplash.com/photo-1518791841217-8f162f1e1131?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60",
            "https://images.unsplash.com/photo-1518791841217-8f162f1e1131?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60"
          ],
          "items": {
            "type": "string"
          }
        },
        "available": {
          "type": "boolean",
          "example": true
        },
        "user": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Jhon Doe"
            },
            "email": {
              "type": "string",
              "example": "jhon@doe.com"
            },
            "avatar": {
              "type": "string",
              "example": "https://randomuser.me/api/portraits/"
            },
            "phone": {
              "type": "string",
              "example": "+5511999999999"
            }
          }
        },
        "adopter": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Sammy Doe"
            },
            "email": {
              "type": "string",
              "example": "sam@doe.com"
            },
            "avatar": {
              "type": "string",
              "example": "https://randomuser.me/api/portraits/"
            },
            "phone": {
              "type": "string",
              "example": "+5511912345678"
            }
          }
        }
      }
    },
    "ConcludeAdoption": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Jhon Doe Jr"
        },
        "age": {
          "type": "number",
          "example": 2
        },
        "weight": {
          "type": "number",
          "example": 8
        },
        "color": {
          "type": "string",
          "example": "white"
        },
        "type": {
          "type": "string",
          "example": "dog"
        },
        "breed": {
          "type": "string",
          "example": "labrador"
        },
        "description": {
          "type": "string",
          "example": "A very cute dog"
        },
        "images": {
          "type": "array",
          "example": [
            "https://images.unsplash.com/photo-1518791841217-8f162f1e1131?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60",
            "https://images.unsplash.com/photo-1518791841217-8f162f1e1131?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60",
            "https://images.unsplash.com/photo-1518791841217-8f162f1e1131?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60"
          ],
          "items": {
            "type": "string"
          }
        },
        "available": {
          "type": "boolean",
          "example": false
        },
        "user": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Jhon Doe"
            },
            "email": {
              "type": "string",
              "example": "jhon@doe.com"
            },
            "avatar": {
              "type": "string",
              "example": "https://randomuser.me/api/portraits/"
            },
            "phone": {
              "type": "string",
              "example": "+5511999999999"
            }
          }
        },
        "adopter": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Sammy Doe"
            },
            "email": {
              "type": "string",
              "example": "sam@doe.com"
            },
            "avatar": {
              "type": "string",
              "example": "https://randomuser.me/api/portraits/"
            },
            "phone": {
              "type": "string",
              "example": "+5511912345678"
            }
          }
        }
      }
    },
    "JwtPrivateKey": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "example": "00236b6d94a46b3de1559135395892b2d9978afedd25115a2a67d115a0913b7a65b502ce26bde21bf943ceae2485f782f27d718beef5d7076aaf15ceed917c12"
        },
        "active": {
          "type": "boolean",
          "example": true
        },
        "keyType": {
          "type": "string",
          "example": "private"
        },
        "Usage": {
          "type": "string",
          "example": "JWT"
        },
        "description": {
          "type": "string",
          "example": "JWT Private Key"
        }
      }
    },
    "IpGeoLocationKey": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "example": "1j008711bbfc948bb07b309h67l4184f"
        },
        "active": {
          "type": "boolean",
          "example": true
        },
        "keyType": {
          "type": "string",
          "example": "private"
        },
        "Usage": {
          "type": "string",
          "example": "IPGeoLocation"
        },
        "description": {
          "type": "string",
          "example": "IP GeoLocation Private API Key"
        }
      }
    }
  }
}